version: "3"

services:
  front_end:
    image: knoxie2/front_end_app
    ports:
      - 5001:5001
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      PRODUCTS_API_URL: http://13.49.179.12:5005/products
      ORDERS_API_URL: http://13.49.179.12:5003/orders
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.labels.env == production]

  orders_service:
    image: knoxie2/orders_api
    ports:
      - 5003:5001
      - 5004:443
      - 9300:9200
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      MongoDB__Host: orders_Db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.labels.env == production]

  products_service:
    image: knoxie2/products_api
    ports:
      - 5005:5001
      - 5006:443
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      MongoDB__Host: products_Db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.labels.env == production]

  orders_Db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: mongod --port 27019
    volumes:
      - .orders_Db:/data/db
    ports:
      - 27019:27019
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.labels.env == production]

  products_Db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: mongod --port 27018
    volumes:
      - .products_Db:/data/db
    ports:
      - 27018:27018
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.labels.env == production]
